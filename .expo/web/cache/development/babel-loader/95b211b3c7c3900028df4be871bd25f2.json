{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\OpacityDotsLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from \"../animated/AnimatedCircle\";\nimport { color } from \"../const\";\n\nvar OpacityDotsLoader = function (_React$PureComponent) {\n  _inherits(OpacityDotsLoader, _React$PureComponent);\n\n  var _super = _createSuper(OpacityDotsLoader);\n\n  function OpacityDotsLoader() {\n    var _this;\n\n    _classCallCheck(this, OpacityDotsLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      opacity: [new Animated.Value(0.5), new Animated.Value(0.5), new Animated.Value(0.5)]\n    };\n\n    _this._animation = function () {\n      var speed = _this.props.speed;\n\n      function seq(self, i) {\n        return Animated.sequence([Animated.timing(self.state.opacity[i], {\n          toValue: 1,\n          duration: speed,\n          delay: i * speed,\n          useNativeDriver: false\n        }), Animated.timing(self.state.opacity[i], {\n          toValue: 0.3,\n          duration: speed,\n          delay: speed,\n          useNativeDriver: false\n        })]);\n      }\n\n      Animated.parallel([seq(_assertThisInitialized(_this), 0), seq(_assertThisInitialized(_this), 1), seq(_assertThisInitialized(_this), 2)]).start(function () {\n        !_this.unmounted && _this._animation();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OpacityDotsLoader, [{\n    key: \"_renderCircle\",\n    value: function _renderCircle(i) {\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size,\n          betweenSpace = _this$props.betweenSpace;\n      return React.createElement(AnimatedCircle, {\n        radius: size,\n        fill: color,\n        x: size / 2 + i * (size + betweenSpace),\n        y: size / 2,\n        opacity: this.state.opacity[i],\n        scale: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          size = _this$props2.size,\n          betweenSpace = _this$props2.betweenSpace;\n      return React.createElement(Surface, {\n        width: size * 3 + betweenSpace * 2,\n        height: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, this._renderCircle(0), this._renderCircle(1), this._renderCircle(2));\n    }\n  }]);\n\n  return OpacityDotsLoader;\n}(React.PureComponent);\n\nOpacityDotsLoader.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.number,\n  betweenSpace: PropTypes.number,\n  speed: PropTypes.number\n};\nOpacityDotsLoader.defaultProps = {\n  color: color,\n  size: 10,\n  betweenSpace: 5,\n  speed: 200\n};\nexport { OpacityDotsLoader as default };","map":{"version":3,"sources":["D:/Github/rainflow_mobile/node_modules/react-native-indicator/lib/loader/OpacityDotsLoader.js"],"names":["React","PropTypes","Surface","AnimatedCircle","color","OpacityDotsLoader","state","opacity","Animated","Value","_animation","speed","props","seq","self","i","sequence","timing","toValue","duration","delay","useNativeDriver","parallel","start","unmounted","size","betweenSpace","_renderCircle","PureComponent","propTypes","string","number","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,cAAP;AACA,SAASC,KAAT;;IAEqBC,iB;;;;;;;;;;;;;;;UAenBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,CAAC,IAAIC,QAAQ,CAACC,KAAb,CAAmB,GAAnB,CAAD,EAA0B,IAAID,QAAQ,CAACC,KAAb,CAAmB,GAAnB,CAA1B,EAAmD,IAAID,QAAQ,CAACC,KAAb,CAAmB,GAAnB,CAAnD;AADH,K;;UA0BRC,U,GAAa,YAAM;AAAA,UACTC,KADS,GACC,MAAKC,KADN,CACTD,KADS;;AAGjB,eAASE,GAAT,CAAaC,IAAb,EAAmBC,CAAnB,EAAsB;AACpB,eAAOP,QAAQ,CAACQ,QAAT,CAAkB,CACvBR,QAAQ,CAACS,MAAT,CAAgBH,IAAI,CAACR,KAAL,CAAWC,OAAX,CAAmBQ,CAAnB,CAAhB,EAAuC;AACrCG,UAAAA,OAAO,EAAE,CAD4B;AAErCC,UAAAA,QAAQ,EAAER,KAF2B;AAGrCS,UAAAA,KAAK,EAAEL,CAAC,GAAGJ,KAH0B;AAIrCU,UAAAA,eAAe,EAAE;AAJoB,SAAvC,CADuB,EAOvBb,QAAQ,CAACS,MAAT,CAAgBH,IAAI,CAACR,KAAL,CAAWC,OAAX,CAAmBQ,CAAnB,CAAhB,EAAuC;AACrCG,UAAAA,OAAO,EAAE,GAD4B;AAErCC,UAAAA,QAAQ,EAAER,KAF2B;AAGrCS,UAAAA,KAAK,EAAET,KAH8B;AAIrCU,UAAAA,eAAe,EAAE;AAJoB,SAAvC,CAPuB,CAAlB,CAAP;AAcD;;AAEDb,MAAAA,QAAQ,CAACc,QAAT,CAAkB,CAACT,GAAG,gCAAO,CAAP,CAAJ,EAAeA,GAAG,gCAAO,CAAP,CAAlB,EAA6BA,GAAG,gCAAO,CAAP,CAAhC,CAAlB,EAA8DU,KAA9D,CAAoE,YAAM;AACxE,SAAC,MAAKC,SAAN,IAAmB,MAAKd,UAAL,EAAnB;AACD,OAFD;AAGD,K;;;;;;;kCA7CaK,C,EAAG;AAAA,wBACuB,KAAKH,KAD5B;AAAA,UACPR,KADO,eACPA,KADO;AAAA,UACAqB,IADA,eACAA,IADA;AAAA,UACMC,YADN,eACMA,YADN;AAEf,aACE,oBAAC,cAAD;AACE,QAAA,MAAM,EAAED,IADV;AAEE,QAAA,IAAI,EAAErB,KAFR;AAGE,QAAA,CAAC,EAAEqB,IAAI,GAAG,CAAP,GAAWV,CAAC,IAAIU,IAAI,GAAGC,YAAX,CAHjB;AAIE,QAAA,CAAC,EAAED,IAAI,GAAG,CAJZ;AAKE,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWC,OAAX,CAAmBQ,CAAnB,CALX;AAME,QAAA,KAAK,EAAE,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;wCAEmB;AAClB,WAAKL,UAAL;AACD;;;2CAEsB;AACrB,WAAKc,SAAL,GAAiB,IAAjB;AACD;;;6BA2BQ;AAAA,yBACwB,KAAKZ,KAD7B;AAAA,UACCa,IADD,gBACCA,IADD;AAAA,UACOC,YADP,gBACOA,YADP;AAEP,aACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAED,IAAI,GAAG,CAAP,GAAWC,YAAY,GAAG,CAA1C;AAA6C,QAAA,MAAM,EAAED,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,aAAL,CAAmB,CAAnB,CADH,EAEG,KAAKA,aAAL,CAAmB,CAAnB,CAFH,EAGG,KAAKA,aAAL,CAAmB,CAAnB,CAHH,CADF;AAOD;;;;EA3E4C3B,KAAK,CAAC4B,a;;AAAhCvB,iB,CACZwB,S,GAAY;AACjBzB,EAAAA,KAAK,EAAEH,SAAS,CAAC6B,MADA;AAEjBL,EAAAA,IAAI,EAAExB,SAAS,CAAC8B,MAFC;AAGjBL,EAAAA,YAAY,EAAEzB,SAAS,CAAC8B,MAHP;AAIjBpB,EAAAA,KAAK,EAAEV,SAAS,CAAC8B;AAJA,C;AADA1B,iB,CAQZ2B,Y,GAAe;AACpB5B,EAAAA,KAAK,EAALA,KADoB;AAEpBqB,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,YAAY,EAAE,CAHM;AAIpBf,EAAAA,KAAK,EAAE;AAJa,C;SARHN,iB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class OpacityDotsLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n    betweenSpace: PropTypes.number,\n    speed: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 10,\n    betweenSpace: 5,\n    speed: 200,\n  };\n\n  state = {\n    opacity: [new Animated.Value(0.5), new Animated.Value(0.5), new Animated.Value(0.5)],\n  };\n\n  _renderCircle(i) {\n    const { color, size, betweenSpace } = this.props;\n    return (\n      <AnimatedCircle\n        radius={size}\n        fill={color}\n        x={size / 2 + i * (size + betweenSpace)}\n        y={size / 2}\n        opacity={this.state.opacity[i]}\n        scale={1}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this._animation();\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  _animation = () => {\n    const { speed } = this.props;\n\n    function seq(self, i) {\n      return Animated.sequence([\n        Animated.timing(self.state.opacity[i], {\n          toValue: 1,\n          duration: speed,\n          delay: i * speed,\n          useNativeDriver: false,\n        }),\n        Animated.timing(self.state.opacity[i], {\n          toValue: 0.3,\n          duration: speed,\n          delay: speed,\n          useNativeDriver: false,\n        }),\n      ]);\n    }\n\n    Animated.parallel([seq(this, 0), seq(this, 1), seq(this, 2)]).start(() => {\n      !this.unmounted && this._animation();\n    });\n  };\n\n  render() {\n    const { size, betweenSpace } = this.props;\n    return (\n      <Surface width={size * 3 + betweenSpace * 2} height={size}>\n        {this._renderCircle(0)}\n        {this._renderCircle(1)}\n        {this._renderCircle(2)}\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}