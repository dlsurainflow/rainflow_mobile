{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\EatBeanLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Surface, Shape } from '@react-native-community/art';\nimport AnimatedCircle from \"../animated/AnimatedCircle\";\nimport { color } from \"../const\";\n\nvar EatBeanLoader = function (_React$PureComponent) {\n  _inherits(EatBeanLoader, _React$PureComponent);\n\n  var _super = _createSuper(EatBeanLoader);\n\n  function EatBeanLoader() {\n    var _this;\n\n    _classCallCheck(this, EatBeanLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dotsY: [new Animated.Value(_this.props.size * 2.2), new Animated.Value(_this.props.size * 2.2), new Animated.Value(_this.props.size * 2.2), new Animated.Value(_this.props.size * 2.2)]\n    };\n    _this.timers = [];\n\n    _this._animation = function (i) {\n      Animated.timing(_this.state.dotsY[i], {\n        toValue: _this.props.size / 2,\n        duration: 1200,\n        useNativeDriver: false\n      }).start(function () {\n        if (!_this.unmounted) {\n          _this.state.dotsY[i].setValue(_this.props.size * 2.2);\n\n          _this._animation(i);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EatBeanLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.dotsY.forEach(function (item, i) {\n        var id = setTimeout(function () {\n          _this2._animation(i);\n        }, i * 300);\n\n        _this2.timers.push(id);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n      this.timers.forEach(function (id) {\n        clearTimeout(id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color;\n      var sinValue = Math.sqrt(2) / 2;\n      var x = Math.floor(size / 2 * sinValue) + size / 2;\n      var startY = Math.floor(size / 2 * sinValue) + size / 2;\n      var endY = size / 2 - Math.floor(size / 2 * sinValue);\n      var d = \"M\" + x + \" \" + startY + \" A \" + size / 2 + \" \" + size / 2 + \", 0, 1, 1, \" + x + \" \" + endY + \" L \" + size / 2 + \" \" + size / 2 + \" Z\";\n      return React.createElement(Surface, {\n        width: size * 2,\n        height: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Shape, {\n        d: d,\n        fill: color,\n        x: size / 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), this.state.dotsY.map(function (item, i) {\n        return React.createElement(AnimatedCircle, {\n          key: i,\n          radius: size / 5,\n          fill: color,\n          x: item,\n          y: size / 2,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        });\n      }));\n    }\n  }]);\n\n  return EatBeanLoader;\n}(React.PureComponent);\n\nEatBeanLoader.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string\n};\nEatBeanLoader.defaultProps = {\n  size: 30,\n  color: color\n};\nexport { EatBeanLoader as default };","map":{"version":3,"sources":["D:/Github/rainflow_mobile/node_modules/react-native-indicator/lib/loader/EatBeanLoader.js"],"names":["React","PropTypes","Surface","Shape","AnimatedCircle","color","EatBeanLoader","state","dotsY","Animated","Value","props","size","timers","_animation","i","timing","toValue","duration","useNativeDriver","start","unmounted","setValue","forEach","item","id","setTimeout","push","clearTimeout","sinValue","Math","sqrt","x","floor","startY","endY","d","map","PureComponent","propTypes","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface, Shape } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class EatBeanLoader extends React.PureComponent {\n  static propTypes = {\n    size: PropTypes.number,\n    color: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 30,\n    color,\n  };\n\n  state = {\n    dotsY: [\n      new Animated.Value(this.props.size * 2.2),\n      new Animated.Value(this.props.size * 2.2),\n      new Animated.Value(this.props.size * 2.2),\n      new Animated.Value(this.props.size * 2.2),\n    ],\n  };\n  timers = [];\n\n  componentDidMount() {\n    this.state.dotsY.forEach((item, i) => {\n      const id = setTimeout(() => {\n        this._animation(i);\n      }, i * 300);\n      this.timers.push(id);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.timers.forEach((id) => {\n      clearTimeout(id);\n    });\n  }\n\n  _animation = (i) => {\n    Animated.timing(this.state.dotsY[i], {\n      toValue: this.props.size / 2,\n      duration: 1200,\n      useNativeDriver: false,\n    }).start(() => {\n      if (!this.unmounted) {\n        this.state.dotsY[i].setValue(this.props.size * 2.2);\n        this._animation(i);\n      }\n    });\n  };\n\n  render() {\n    const { size, color } = this.props;\n\n    const sinValue = Math.sqrt(2) / 2;\n    const x = Math.floor((size / 2) * sinValue) + size / 2;\n    const startY = Math.floor((size / 2) * sinValue) + size / 2;\n    const endY = size / 2 - Math.floor((size / 2) * sinValue);\n    const d = `M${x} ${startY} A ${size / 2} ${size / 2}, 0, 1, 1, ${x} ${endY} L ${size /\n      2} ${size / 2} Z`;\n    return (\n      <Surface width={size * 2} height={size}>\n        <Shape d={d} fill={color} x={size / 5} />\n        {this.state.dotsY.map((item, i) => (\n          <AnimatedCircle key={i} radius={size / 5} fill={color} x={item} y={size / 2} />\n        ))}\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}