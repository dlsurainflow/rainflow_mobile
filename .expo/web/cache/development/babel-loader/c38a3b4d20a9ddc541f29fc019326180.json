{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"react-native-gesture-handler\";\nimport LoginScreen from \"./src/Login.js\";\nimport SignupScreen from \"./src/Screens/Signup.js\";\nimport ReportingScreen from \"./src/Screens/Reporting.js\";\nimport ReportHistoryScreen from \"./src/Screens/ReportHistory.js\";\nimport HomeMap from \"./src/Screens/HomeMap.js\";\nimport UserProfileScreen from \"./src/Screens/UserProfile.js\";\nimport AboutUsScreen from \"./src/Screens/AboutUs.js\";\nimport AccountInfoScreen from \"./src/Screens/AccountInfo.js\";\nimport ActiveReportsScreen from \"./src/Screens/ActiveReports.js\";\nimport DashboardScreen from \"./src/Screens/Dashboard.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\nvar Stack = createStackNavigator();\nvar bottomTab = createMaterialBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loadSplash = _useState2[0],\n      setLoadSplash = _useState2[1];\n\n  useEffect(function () {\n    var unmounted = false;\n\n    if (unmounted == false) {\n      setTimeout(function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoadSplash(true);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }, 10000);\n    }\n\n    return function () {\n      unmounted = true;\n    };\n  }, []);\n\n  var ReportComp = function ReportComp(props) {\n    return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"ReportingScreen\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ReportingScreen\",\n      component: ReportingScreen,\n      options: {\n        title: \"Reporting\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ReportHistory\",\n      component: ReportHistoryScreen,\n      options: {\n        title: \"ReportHistory\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }\n    })));\n  };\n\n  var MapComp = function MapComp(props) {\n    return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"HomeMap\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"HomeMap\",\n      component: HomeMap,\n      options: {\n        title: \"HomeMap\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var ProfileComp = function ProfileComp(props) {\n    return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"UserProfile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"UserProfile\",\n      component: UserProfileScreen,\n      options: {\n        title: \"UserProfile\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ReportHistory\",\n      component: ReportHistoryScreen,\n      options: {\n        title: \"ReportHistory\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"About Us\",\n      component: AboutUsScreen,\n      options: {\n        title: \"About Us\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Account Info\",\n      component: AccountInfoScreen,\n      options: {\n        title: \"Account Info\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Active Reports\",\n      component: ActiveReportsScreen,\n      options: {\n        title: \"Active Reports\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: \"Dashboard\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  var Navbar = function Navbar(props) {\n    return React.createElement(bottomTab.Navigator, {\n      initialRouteName: \"HomeMap\",\n      backBehavior: \"none\",\n      barStyle: {\n        backgroundColor: \"#fff\"\n      },\n      activeColor: \"#f0edf6\",\n      shifting: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }, React.createElement(bottomTab.Screen, {\n      name: \"Reporting\",\n      children: ReportComp,\n      options: {\n        tabBarColor: '#4FC69A',\n        tabBarLabel: \"Report\",\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"alert-octagon\",\n            color: \"#ffff\",\n            size: 26,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 1\n      }\n    }), React.createElement(bottomTab.Screen, {\n      name: \"HomeMap\",\n      children: MapComp,\n      options: {\n        tabBarColor: '#1EA78C',\n        tabBarLabel: \"Map\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"compass\",\n            color: \"#ffff\",\n            size: 26,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), React.createElement(bottomTab.Screen, {\n      name: \"User Profile\",\n      children: ProfileComp,\n      options: {\n        tabBarColor: '#0E956A',\n        tabBarLabel: \"Profile\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"account-circle\",\n            color: \"#ffff\",\n            size: 26,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 1\n      }\n    }));\n  };\n\n  return React.createElement(AnimatedSplash, {\n    translucent: true,\n    isLoaded: loadSplash,\n    logoImage: require(\"./assets/animated_logo.gif\"),\n    backgroundColor: \"#3D3D3D\",\n    logoHeight: 200,\n    logoWidth: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    initialRouteName: \"MainMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Signup\",\n    component: SignupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MainMenu\",\n    component: Navbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/Github/rainflow_mobile/App.js"],"names":["React","useEffect","useState","LoginScreen","SignupScreen","ReportingScreen","ReportHistoryScreen","HomeMap","UserProfileScreen","AboutUsScreen","AccountInfoScreen","ActiveReportsScreen","DashboardScreen","NavigationContainer","createMaterialBottomTabNavigator","createStackNavigator","MaterialCommunityIcons","AnimatedSplash","Stack","bottomTab","App","loadSplash","setLoadSplash","unmounted","setTimeout","ReportComp","props","headerShown","title","MapComp","ProfileComp","Navbar","backgroundColor","tabBarColor","tabBarLabel","tabBarIcon","color","require"],"mappings":"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","sourcesContent":["\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nimport \"react-native-gesture-handler\";\r\n\r\n//SCREENS START\r\nimport LoginScreen from \"./src/Login.js\";\r\nimport SignupScreen from \"./src/Screens/Signup.js\";\r\nimport ReportingScreen from \"./src/Screens/Reporting.js\";\r\nimport ReportHistoryScreen from \"./src/Screens/ReportHistory.js\";\r\nimport HomeMap from \"./src/Screens/HomeMap.js\";\r\nimport UserProfileScreen from \"./src/Screens/UserProfile.js\";\r\nimport AboutUsScreen from \"./src/Screens/AboutUs.js\"\r\nimport AccountInfoScreen from \"./src/Screens/AccountInfo.js\";\r\nimport ActiveReportsScreen from \"./src/Screens/ActiveReports.js\";\r\nimport DashboardScreen from \"./src/Screens/Dashboard.js\"\r\n\r\n//SCREENS END\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\";\r\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\r\n\r\nconst Stack = createStackNavigator();\r\nconst bottomTab = createMaterialBottomTabNavigator();\r\n\r\n\r\nexport default function App() {\r\n  \r\n  const [loadSplash, setLoadSplash] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    let unmounted = false;\r\n\r\n  if(unmounted == false){\r\n    setTimeout(async() => {\r\n      setLoadSplash(true)\r\n    }, 10000);\r\n  }\r\n\r\n  return () => {unmounted = true}\r\n  }, [])\r\n\r\n  const ReportComp = (props) => (\r\n    <>\r\n      <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName=\"ReportingScreen\">\r\n        <Stack.Screen\r\n          name=\"ReportingScreen\"\r\n          component={ReportingScreen}\r\n          options={{ title: \"Reporting\" }}\r\n        />\r\n         <Stack.Screen\r\n          name=\"ReportHistory\"\r\n          component={ReportHistoryScreen}\r\n          options={{ title: \"ReportHistory\" }}\r\n        />\r\n      </Stack.Navigator>\r\n    </>\r\n  );\r\n  const MapComp = (props) => (\r\n    <>\r\n      <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName=\"HomeMap\">\r\n        <Stack.Screen\r\n          name=\"HomeMap\"\r\n          component={HomeMap}\r\n          options={{ title: \"HomeMap\" }}\r\n        />\r\n      </Stack.Navigator>\r\n    </>\r\n  );\r\n\r\n\r\n  const ProfileComp = (props) => (\r\n    <>\r\n      <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName=\"UserProfile\">\r\n      <Stack.Screen\r\n          name=\"UserProfile\"\r\n          component={UserProfileScreen}\r\n          options={{ title: \"UserProfile\" }}\r\n        />\r\n\r\n      <Stack.Screen\r\n          name=\"ReportHistory\"\r\n          component={ReportHistoryScreen}\r\n          options={{ title: \"ReportHistory\" }}\r\n        />\r\n\r\n      <Stack.Screen\r\n          name=\"About Us\"\r\n          component={AboutUsScreen}\r\n          options={{ title: \"About Us\" }}\r\n        />\r\n\r\n      <Stack.Screen\r\n          name=\"Account Info\"\r\n          component={AccountInfoScreen}\r\n          options={{ title: \"Account Info\" }}\r\n        />\r\n\r\n      <Stack.Screen\r\n          name=\"Active Reports\"\r\n          component={ActiveReportsScreen}\r\n          options={{ title: \"Active Reports\" }}\r\n        />\r\n\r\n      <Stack.Screen\r\n          name=\"Dashboard\"\r\n          component={DashboardScreen}\r\n          options={{ title: \"Dashboard\" }}\r\n        />\r\n      </Stack.Navigator>\r\n    </>\r\n  );\r\n\r\n\r\n\r\n  const Navbar = (props) => {\r\n      return(\r\n    <bottomTab.Navigator\r\n        initialRouteName=\"HomeMap\"\r\n        backBehavior=\"none\"\r\n        barStyle = {{backgroundColor: \"#fff\"}}\r\n        activeColor=\"#f0edf6\" \r\n        shifting\r\n      >\r\n\r\n<bottomTab.Screen\r\n          name=\"Reporting\"\r\n          children={ReportComp}\r\n          options={{\r\n            tabBarColor: '#4FC69A', \r\n            tabBarLabel: \"Report\",\r\n        \r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons \r\n                name=\"alert-octagon\" \r\n                color=\"#ffff\" \r\n                size={26} />\r\n            ),\r\n           \r\n          }}\r\n        />\r\n\r\n        <bottomTab.Screen\r\n          name=\"HomeMap\"\r\n          children={MapComp}\r\n          options={{\r\n            tabBarColor: '#1EA78C',\r\n\r\n            tabBarLabel: \"Map\",\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons \r\n                name=\"compass\" \r\n                color=\"#ffff\" \r\n                size={26} />\r\n            ),\r\n          }}\r\n        />\r\n       \r\n      \r\n\r\n<bottomTab.Screen\r\n          name=\"User Profile\"\r\n          children={ProfileComp}\r\n          options={{\r\n            tabBarColor: '#0E956A',\r\n         \r\n            tabBarLabel: \"Profile\",\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-circle\"\r\n                color=\"#ffff\"\r\n                size={26}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n        \r\n        \r\n      </bottomTab.Navigator>\r\n\r\n      )\r\n  }\r\n\r\n  return (\r\n    <AnimatedSplash\r\n    translucent={true}\r\n    isLoaded={loadSplash}\r\n    logoImage={require(\"./assets/animated_logo.gif\")}\r\n    backgroundColor={\"#3D3D3D\"}\r\n    logoHeight={200}\r\n    logoWidth={300}\r\n  >\r\n   <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName=\"MainMenu\">\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Signup\" component={SignupScreen} />\r\n      <Stack.Screen name=\"MainMenu\" component={Navbar} />\r\n    </Stack.Navigator>\r\n   </NavigationContainer>\r\n   </AnimatedSplash>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}