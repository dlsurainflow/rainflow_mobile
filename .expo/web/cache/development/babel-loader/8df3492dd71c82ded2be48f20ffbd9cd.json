{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\src\\\\Login.js\";\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar Login = function Login(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      textInputHandler = _useState2[0],\n      setTextInputHandler = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var usernameHandler = function usernameHandler(e) {\n    setUsername(e);\n  };\n\n  var passwordHandler = function passwordHandler(e) {\n    setPassword(e);\n  };\n\n  useEffect(function () {\n    var backAction = function backAction() {\n      props.navigation.navigate(\"MainMenu\", {\n        screen: 'UserProfile'\n      });\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return backHandler.remove();\n    };\n  });\n\n  var loginHandler = function loginHandler() {\n    var RCTNetworking = require(\"react-native/Libraries/Network/RCTNetworking\");\n\n    RCTNetworking.clearCookies(function (result) {\n      console.log(result);\n    });\n    fetch(\"https://rainflow.live/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(function (response) {\n      if (response.status === 400) {\n        response.json().then(function (object) {\n          alert(\"Invalid username or password!\");\n          console.log(\"400: \", object.non_field_errors);\n        });\n      } else if (response.status === 200) {\n        response.json().then(function _callee(responseJson) {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(responseJson);\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", responseJson.data.token));\n\n                case 3:\n                  _context.next = 5;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"username\", responseJson.data.username));\n\n                case 5:\n                  _context.next = 7;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"email\", responseJson.data.email));\n\n                case 7:\n                  _context.next = 9;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"points\", JSON.stringify(responseJson.data.points)));\n\n                case 9:\n                  _context.next = 11;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userID\", JSON.stringify(responseJson.data.userID)));\n\n                case 11:\n                  _context.next = 13;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"dateCreated\", responseJson.data.createdAt));\n\n                case 13:\n                  props.navigation.push(\"MainMenu\", {\n                    screen: 'HomeMap'\n                  });\n                  ToastAndroid.show(\"Welcome, \" + responseJson.data.username + \"!\", ToastAndroid.SHORT);\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        alert(response.status);\n        ToastAndroid.show(\"Error: \" + response.status, ToastAndroid.SHORT);\n        console.log(\"Error: \", response.status);\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.backgroundContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.logoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/Logo.png\"),\n    style: {\n      height: \"38%\",\n      width: \"90%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Username\",\n    style: styles.textInput,\n    onChangeText: usernameHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    onChangeText: passwordHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return loginHandler();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: \"#fff\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"LOGIN\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      paddingTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Don't have an account?\", \" \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Signup\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#27B296\",\n      paddingTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Register now!\"))))));\n};\n\nvar styles = StyleSheet.create({\n  backgroundContainer: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#3d3d3d\",\n    justifyContent: \"center\",\n    paddingTop: Platform.OS === \"android\" ? 25 : 0\n  },\n  contentContainer: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#3d3d3d\",\n    paddingHorizontal: 30\n  },\n  logoContainer: {\n    flex: 1.1,\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    backgroundColor: \"#3d3d3d\",\n    paddingBottom: 40\n  },\n  inputContainer: {\n    flex: 0.5,\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"#3d3d3d\",\n    paddingTop: 40,\n    paddingHorizontal: 5\n  },\n  textInput: {\n    backgroundColor: \"#F0F3F4\",\n    marginVertical: 1.5,\n    paddingHorizontal: 10,\n    height: 40,\n    width: \"100%\",\n    borderColor: \"#dedede\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    letterSpacing: 2,\n    alignItems: \"center\",\n    borderRadius: 30\n  },\n  button: {\n    width: \"100%\",\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 30,\n    backgroundColor: \"#1EA78C\"\n  },\n  buttonContainer: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#3d3d3d\",\n    paddingHorizontal: 5,\n    paddingTop: 20\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/Github/rainflow_mobile/src/Login.js"],"names":["React","Component","useState","useEffect","AsyncStorage","Login","props","textInputHandler","setTextInputHandler","username","setUsername","password","setPassword","usernameHandler","e","passwordHandler","backAction","navigation","navigate","screen","backHandler","BackHandler","addEventListener","remove","loginHandler","RCTNetworking","require","clearCookies","result","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","json","object","alert","non_field_errors","responseJson","setItem","data","token","email","points","userID","createdAt","push","ToastAndroid","show","SHORT","catch","error","styles","backgroundContainer","contentContainer","logoContainer","height","width","inputContainer","textInput","buttonContainer","button","textAlign","color","fontWeight","flexDirection","paddingTop","StyleSheet","create","flex","backgroundColor","justifyContent","Platform","OS","alignItems","paddingHorizontal","paddingBottom","marginVertical","borderColor","borderStyle","borderWidth","letterSpacing","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ToastAndroid,\r\n  TouchableOpacity,\r\n  Image,\r\n  BackHandler\r\n} from \"react-native\";\r\n\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst Login = (props) => {\r\n  const [textInputHandler, setTextInputHandler] = useState({});\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const usernameHandler = (e) => {\r\n    setUsername(e);\r\n  };\r\n  const passwordHandler = (e) => {\r\n    setPassword(e);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const backAction = () => {\r\n      props.navigation.navigate(\"MainMenu\", {screen: 'UserProfile'});\r\n      return true;\r\n    };\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n    return () => backHandler.remove();\r\n  });\r\n\r\n\r\n  const loginHandler = () => {\r\n    const RCTNetworking = require(\"react-native/Libraries/Network/RCTNetworking\");\r\n    RCTNetworking.clearCookies((result) => {\r\n      console.log(result); //true if successfully cleared\r\n    });\r\n\r\n\r\n    fetch(\"https://rainflow.live/api/users/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ \r\n          username: username, \r\n          password: password\r\n        }),\r\n    }).then(function (response) {\r\n      if (response.status === 400) {\r\n        // Error if username/password is invalid\r\n        response.json().then(function (object) {\r\n          alert(\"Invalid username or password!\");\r\n          console.log(\"400: \", object.non_field_errors);\r\n        });\r\n      } else if (response.status === 200) {\r\n        // Correct username and password\r\n        response\r\n          .json()\r\n          .then(async (responseJson) => {\r\n            console.log(responseJson);\r\n            await AsyncStorage.setItem(\"token\", responseJson.data.token); // Save token to storage\r\n            await AsyncStorage.setItem(\"username\", responseJson.data.username); // Save username\r\n            await AsyncStorage.setItem(\"email\", responseJson.data.email); // Save email\r\n            await AsyncStorage.setItem(\"points\", JSON.stringify(responseJson.data.points)); // Save points\r\n            await AsyncStorage.setItem(\"userID\", JSON.stringify(responseJson.data.userID)); // Save userID\r\n          //  await AsyncStorage.setItem(\"badge\", responseJson.data.badge); // Saves user badge\r\n            await AsyncStorage.setItem(\"dateCreated\", responseJson.data.createdAt); // Saves date when user joined\r\n            props.navigation.push(\"MainMenu\", { screen: 'HomeMap' })\r\n\r\n            ToastAndroid.show(\r\n              \"Welcome, \" + responseJson.data.username + \"!\",\r\n              ToastAndroid.SHORT\r\n            )\r\n            //props.navigation.navigate(\"Main Menu\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        alert(response.status);\r\n        ToastAndroid.show(\"Error: \" + response.status, ToastAndroid.SHORT);\r\n        console.log(\"Error: \", response.status);\r\n      }\r\n    });\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <View style={styles.backgroundContainer}>\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.logoContainer}>\r\n          <Image\r\n            source={require(\"../assets/Logo.png\")}\r\n            style={{ height: \"38%\", width: \"90%\" }}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            placeholder=\"Username\"\r\n            style={styles.textInput}\r\n            onChangeText={usernameHandler}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Password\"\r\n            secureTextEntry={true}\r\n            style={styles.textInput}\r\n            onChangeText={passwordHandler}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => loginHandler()}\r\n          >\r\n            <Text\r\n              style={{ textAlign: \"center\", color: \"#fff\", fontWeight: \"bold\" }}\r\n            >\r\n              LOGIN\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flexDirection: \"row\" }}>\r\n            <Text style={{ color: \"white\", paddingTop: 15 }}>\r\n              Don't have an account?{\" \"}\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => props.navigation.navigate(\"Signup\")}\r\n            >\r\n              <Text style={{ color: \"#27B296\", paddingTop: 15 }}>\r\n                Register now!\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#3d3d3d\",\r\n    justifyContent: \"center\",\r\n    paddingTop: Platform.OS === \"android\" ? 25 : 0,\r\n  },\r\n\r\n  contentContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3d3d3d\",\r\n    paddingHorizontal: 30,\r\n  },\r\n\r\n  logoContainer: {\r\n    flex: 1.1,\r\n    width: \"100%\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3d3d3d\",\r\n    paddingBottom: 40,\r\n  },\r\n\r\n  inputContainer: {\r\n    flex: 0.5,\r\n    width: \"100%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3d3d3d\",\r\n    paddingTop: 40,\r\n    paddingHorizontal: 5,\r\n  },\r\n\r\n  textInput: {\r\n    backgroundColor: \"#F0F3F4\",\r\n    marginVertical: 1.5,\r\n    paddingHorizontal: 10,\r\n    height: 40,\r\n    width: \"100%\",\r\n    borderColor: \"#dedede\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    letterSpacing: 2,\r\n    alignItems: \"center\",\r\n    borderRadius: 30,\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n    height: 45,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 30,\r\n    backgroundColor: \"#1EA78C\",\r\n  },\r\n\r\n  buttonContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3d3d3d\",\r\n    paddingHorizontal: 5,\r\n    paddingTop: 20,\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}