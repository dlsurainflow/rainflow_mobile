{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\src\\\\Screens\\\\AccountInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Appbar, TextInput, DefaultTheme, Snackbar } from 'react-native-paper';\nimport { ColorDotsLoader } from 'react-native-indicator';\nimport moment from 'moment';\n\nvar AccountInfo = function AccountInfo(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      badge = _useState6[0],\n      setBadge = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      points = _useState8[0],\n      setPoints = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      joined = _useState10[0],\n      setJoined = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentPassword = _useState12[0],\n      setCurrentPassword = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      newPassword = _useState14[0],\n      setNewPassword = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      newPassword1 = _useState16[0],\n      setNewPassword1 = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showChange = _useState18[0],\n      setShowChange = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      visible = _useState20[0],\n      setVisible = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showLoading = _useState22[0],\n      setShowLoading = _useState22[1];\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      background: '#fff',\n      primary: '#0E956A'\n    })\n  });\n\n  var getStored = function getStored() {\n    var un, pts, email_add, badgeRank, dateJoined, convertedTime;\n    return _regeneratorRuntime.async(function getStored$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"username\"));\n\n          case 2:\n            un = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"points\"));\n\n          case 5:\n            pts = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"email\"));\n\n          case 8:\n            email_add = _context.sent;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"badge\"));\n\n          case 11:\n            badgeRank = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"dateCreated\"));\n\n          case 14:\n            dateJoined = _context.sent;\n            console.log(dateJoined);\n            convertedTime = moment(dateJoined).format(\"DD MMM YYYY\");\n            setUsername(un);\n            setPoints(pts);\n            setEmail(email_add);\n            setBadge(\"Silver Badge\");\n            setJoined(convertedTime);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var changePasswordHandler = function changePasswordHandler() {\n    var RCTNetworking, token;\n    return _regeneratorRuntime.async(function changePasswordHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(newPassword == newPassword1 && newPassword != null && newPassword != '' && currentPassword != null && currentPassword != '')) {\n              _context2.next = 14;\n              break;\n            }\n\n            if (!(newPassword == currentPassword)) {\n              _context2.next = 5;\n              break;\n            }\n\n            Alert.alert('New password is the same as current password!');\n            _context2.next = 12;\n            break;\n\n          case 5:\n            RCTNetworking = require(\"react-native/Libraries/Network/RCTNetworking\");\n            RCTNetworking.clearCookies(function (result) {});\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 9:\n            token = _context2.sent;\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(fetch(\"https://rainflow.live/api/users/change-password\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': \"Bearer \" + token\n              },\n              body: JSON.stringify({\n                password: currentPassword,\n                new_password: newPassword\n              })\n            }).then(function (response) {\n              if (response.status == 200) {\n                response.json().then(function (data) {\n                  if (data.status == \"Error\") {\n                    console.log(data);\n                    console.log(\"-----\" + currentPassword + \"----\");\n                    Alert.alert('Current password is incorrect.');\n                  } else {\n                    logOut();\n                    console.log(data);\n                  }\n                });\n              } else {\n                Alert.alert('Error in changing password! (Code: ' + response.status + ')');\n              }\n            }));\n\n          case 12:\n            _context2.next = 15;\n            break;\n\n          case 14:\n            if (newPassword == null || newPassword == '' || newPassword1 == null || newPassword1 == '' || currentPassword == '') {\n              Alert.alert(\"Please fill out all the information needed!\");\n            } else {\n              Alert.alert(\"New passwords do not match. Please check again.\");\n            }\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logOut = function logOut() {\n    return _regeneratorRuntime.async(function logOut$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            setShowLoading(true);\n            setVisible(true);\n            setTimeout(function _callee() {\n              return _regeneratorRuntime.async(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      setShowLoading(false);\n                      setVisible(false);\n                      _context3.next = 4;\n                      return _regeneratorRuntime.awrap(AsyncStorage.removeItem('username'));\n\n                    case 4:\n                      _context3.next = 6;\n                      return _regeneratorRuntime.awrap(AsyncStorage.removeItem('points'));\n\n                    case 6:\n                      _context3.next = 8;\n                      return _regeneratorRuntime.awrap(AsyncStorage.removeItem('token'));\n\n                    case 8:\n                      props.navigation.navigate(\"Login\");\n\n                    case 9:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, 3500);\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", false);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    var backAction = function backAction() {\n      props.navigation.goBack();\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return backHandler.remove();\n    };\n  });\n  useEffect(function () {\n    getStored();\n  }, []);\n  return React.createElement(View, {\n    style: styles.backgroundContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, React.createElement(Appbar.Header, {\n    style: {\n      backgroundColor: \"#0E956A\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, React.createElement(Appbar.BackAction, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"UserProfile\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), React.createElement(Appbar.Content, {\n    title: \"Account Information\",\n    titleStyle: {\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  })), React.createElement(Snackbar, {\n    visible: visible,\n    onDismiss: onDismissSnackBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, \"Your password is being updated. Please login again.\"), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Username\"), React.createElement(Text, {\n    style: styles.fixedRightText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, username)), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(Text, {\n    style: styles.fixedRightText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, email)), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Badge\"), React.createElement(Text, {\n    style: styles.fixedRightText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, badge)), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Points\"), React.createElement(Text, {\n    style: styles.fixedRightText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, points)), React.createElement(View, {\n    style: styles.infoContainerBottom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Joined\"), React.createElement(Text, {\n    style: styles.fixedRightText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, joined)), React.createElement(TouchableOpacity, {\n    style: styles.changePWHeader,\n    onPress: function onPress() {\n      setShowChange(!showChange);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \" Change Password\")), showChange ? React.createElement(View, {\n    style: styles.changePWBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    type: \"outlined\",\n    label: \"Current Password\",\n    value: currentPassword,\n    theme: theme,\n    secureTextEntry: true,\n    style: styles.outlinedTextBox,\n    onChangeText: function onChangeText(text) {\n      return setCurrentPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    type: \"outlined\",\n    label: \"New Password\",\n    value: newPassword,\n    theme: theme,\n    secureTextEntry: true,\n    style: styles.outlinedTextBox,\n    onChangeText: function onChangeText(text) {\n      return setNewPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    type: \"outlined\",\n    label: \"Repeat New Password\",\n    value: newPassword1,\n    theme: theme,\n    secureTextEntry: true,\n    style: styles.outlinedTextBox,\n    onChangeText: function onChangeText(text) {\n      return setNewPassword1(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      showLoading ? null : changePasswordHandler();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, \"Confirm\"))) : null), showLoading ? React.createElement(View, {\n    style: styles.loadingContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, React.createElement(ColorDotsLoader, {\n    size: 30,\n    color1: \"#4FC69A\",\n    color2: \"#1EA78C\",\n    color3: \"#0E956A\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      color: \"#434343\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Loading\")) : null));\n};\n\nvar styles = StyleSheet.create({\n  backgroundContainer: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    marginTop: Platform.OS === \"android\" ? 25 : 0\n  },\n  contentContainer: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    padding: 15\n  },\n  rbuttonContainer: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\"\n  },\n  logoContainer: {\n    flex: 1.5,\n    width: \"100%\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#434343\",\n    paddingBottom: 0\n  },\n  inputContainer: {\n    flex: 0.5,\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"#434343\",\n    paddingTop: 40,\n    paddingHorizontal: 5\n  },\n  button: {\n    width: \"50%\",\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 30,\n    backgroundColor: \"#1EA78C\",\n    alignSelf: \"center\",\n    marginVertical: 15\n  },\n  changePWHeader: {\n    width: \"100%\",\n    backgroundColor: \"#1EA78C\",\n    marginHorizontal: 5,\n    marginTop: 15,\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    alignItems: \"center\"\n  },\n  loadingContainer: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    paddingTop: Platform.OS === \"android\" ? 25 : 0\n  },\n  infoContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderBottomWidth: 1,\n    paddingVertical: 25,\n    marginHorizontal: 5,\n    borderBottomColor: \"#bcbcbc\"\n  },\n  infoContainerBottom: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 25,\n    marginHorizontal: 5\n  },\n  boldText: {\n    position: \"absolute\",\n    left: 15,\n    fontWeight: \"bold\"\n  },\n  fixedRightText: {\n    position: \"absolute\",\n    right: 15\n  },\n  changePWBody: {\n    paddingHorizontal: 10,\n    width: \"100%\",\n    backgroundColor: \"#f0edf6\",\n    marginHorizontal: 5\n  },\n  outlinedTextBox: {\n    fontSize: 13,\n    marginVertical: 2,\n    width: \"97%\",\n    alignSelf: \"center\"\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});\nexport default AccountInfo;","map":{"version":3,"sources":["D:/Github/rainflow_mobile/src/Screens/AccountInfo.js"],"names":["React","useState","useEffect","AsyncStorage","Appbar","TextInput","DefaultTheme","Snackbar","ColorDotsLoader","moment","AccountInfo","props","username","setUsername","email","setEmail","badge","setBadge","points","setPoints","joined","setJoined","currentPassword","setCurrentPassword","newPassword","setNewPassword","newPassword1","setNewPassword1","showChange","setShowChange","visible","setVisible","showLoading","setShowLoading","onDismissSnackBar","theme","colors","background","primary","getStored","getItem","un","pts","email_add","badgeRank","dateJoined","console","log","convertedTime","format","changePasswordHandler","Alert","alert","RCTNetworking","require","clearCookies","result","token","fetch","method","headers","body","JSON","stringify","password","new_password","then","response","status","json","data","logOut","setTimeout","removeItem","navigation","navigate","backAction","goBack","backHandler","BackHandler","addEventListener","remove","styles","backgroundContainer","backgroundColor","fontSize","contentContainer","width","infoContainer","boldText","fixedRightText","infoContainerBottom","changePWHeader","color","fontWeight","changePWBody","outlinedTextBox","text","button","buttonText","loadingContainer","StyleSheet","create","flex","justifyContent","marginTop","Platform","OS","alignItems","padding","rbuttonContainer","logoContainer","paddingBottom","inputContainer","paddingTop","paddingHorizontal","height","borderRadius","alignSelf","marginVertical","marginHorizontal","paddingVertical","flexDirection","position","borderBottomWidth","borderBottomColor","left","right","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Alert,\r\n  BackHandler,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { Appbar, TextInput, DefaultTheme, Snackbar} from 'react-native-paper';\r\nimport { ColorDotsLoader } from 'react-native-indicator';\r\nimport moment from 'moment'\r\n\r\nconst AccountInfo = (props) => {\r\n\r\nconst [username, setUsername] = useState();\r\nconst [email, setEmail] = useState();\r\nconst [badge, setBadge] = useState();\r\nconst [points, setPoints] = useState();\r\nconst [joined, setJoined] = useState();  \r\nconst [currentPassword, setCurrentPassword] = useState();\r\nconst [newPassword, setNewPassword] = useState();\r\nconst [newPassword1, setNewPassword1] = useState();\r\nconst [showChange, setShowChange] = useState(false);\r\nconst [visible, setVisible] = useState(false);\r\nconst [showLoading, setShowLoading] = useState(false)\r\n\r\nconst onDismissSnackBar = () => setVisible(false);\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      background: '#fff',\r\n      primary: '#0E956A',\r\n    },\r\n  };\r\n\r\n  const getStored = async()=>{\r\n    let un = await AsyncStorage.getItem(\"username\");\r\n    let pts = await AsyncStorage.getItem(\"points\");\r\n    let email_add = await AsyncStorage.getItem(\"email\")\r\n    let badgeRank = await AsyncStorage.getItem(\"badge\");\r\n    let dateJoined = await AsyncStorage.getItem(\"dateCreated\")\r\n    console.log(dateJoined)\r\n    let convertedTime = moment(dateJoined).format(\"DD MMM YYYY\")\r\n\r\n    setUsername(un);\r\n    setPoints(pts);\r\n    setEmail(email_add)\r\n    setBadge(\"Silver Badge\")\r\n    setJoined(convertedTime)\r\n  }\r\n\r\n  const changePasswordHandler = async() =>{\r\n    if(newPassword == newPassword1 && newPassword != null && newPassword != '' && currentPassword != null && currentPassword != ''){ //Check if new passwords match and current password has been entered\r\n          if(newPassword == currentPassword){\r\n            Alert.alert('New password is the same as current password!')\r\n          }\r\n          else{\r\n              const RCTNetworking = require(\"react-native/Libraries/Network/RCTNetworking\");\r\n                RCTNetworking.clearCookies((result) => {\r\n              });\r\n    \r\n              const token = await AsyncStorage.getItem(\"token\")\r\n    \r\n              await fetch(`https://rainflow.live/api/users/change-password`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept' : 'application/json',\r\n                    'Authorization' :  `Bearer ${token}`\r\n                },\r\n                body :JSON.stringify({ \r\n                    password: currentPassword,\r\n                    new_password: newPassword\r\n                })\r\n                }).then(response => {\r\n                  if(response.status == 200){\r\n                  \r\n                    response.json().then( (data) => {\r\n                      if(data.status == \"Error\"){\r\n                        console.log(data)\r\n                        console.log(\"-----\" +currentPassword+ \"----\")\r\n                        Alert.alert('Current password is incorrect.');\r\n                      }else{\r\n                        logOut()\r\n                        console.log(data)\r\n                      }\r\n                    });\r\n                  }\r\n                  else{\r\n                    Alert.alert(\r\n                      'Error in changing password! (Code: ' + response.status + ')');\r\n                  }\r\n                })  \r\n          }\r\n\r\n    }else{\r\n     \r\n      if(newPassword == null || newPassword =='' || newPassword1 == null || newPassword1 == '' || currentPassword == ''){\r\n        Alert.alert(\"Please fill out all the information needed!\");\r\n      }\r\n      else{\r\n       Alert.alert(\"New passwords do not match. Please check again.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const  logOut = async() =>{\r\n    try {\r\n      setShowLoading(true)\r\n      setVisible(true)\r\n      setTimeout(async() => {\r\n        setShowLoading(false)\r\n        setVisible(false)\r\n        await AsyncStorage.removeItem('username');\r\n        await AsyncStorage.removeItem('points');\r\n        await AsyncStorage.removeItem('token');\r\n        props.navigation.navigate(\"Login\")\r\n      }, 3500);\r\n\r\n\r\n\r\n  }\r\n  catch(exception) {\r\n      return false;\r\n  }\r\n}\r\n\r\n  useEffect(() => {\r\n    const backAction = () => {\r\n      props.navigation.goBack();\r\n      return true;\r\n    };\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n    return () => backHandler.remove();\r\n  });\r\n\r\n  useEffect(()=>{\r\n    getStored()\r\n  },[])\r\n\r\n\r\n\r\n  return (\r\n  \r\n    <View style={styles.backgroundContainer}>\r\n      <Appbar.Header style = {{backgroundColor: \"#0E956A\"}}>\r\n      <Appbar.BackAction onPress={()=> props.navigation.navigate(\"UserProfile\")} />\r\n      <Appbar.Content title=\"Account Information\" titleStyle= {{fontSize: 15}}/>\r\n    </Appbar.Header>\r\n\r\n    <Snackbar\r\n        visible={visible}\r\n        onDismiss={onDismissSnackBar}\r\n        >\r\n        Your password is being updated. Please login again.\r\n      </Snackbar>\r\n\r\n      <View style={styles.contentContainer}>\r\n        <ScrollView style = {{width: \"100%\"}} showsVerticalScrollIndicator = {false}>\r\n        <View style = {styles.infoContainer}>\r\n            <Text style = {styles.boldText}>Username</Text>\r\n            <Text style = {styles.fixedRightText}>{username}</Text>\r\n        </View>\r\n        <View style = {styles.infoContainer}>\r\n            <Text style ={styles.boldText}>Email</Text>\r\n            <Text style = {styles.fixedRightText}>{email}</Text>\r\n        </View>\r\n        <View style = {styles.infoContainer}>\r\n            <Text style = {styles.boldText}>Badge</Text>\r\n            <Text style = {styles.fixedRightText}>{badge}</Text>\r\n        </View>\r\n        <View style = {styles.infoContainer}>\r\n            <Text style = {styles.boldText}>Points</Text>\r\n            <Text style = {styles.fixedRightText}>{points}</Text>\r\n        </View>\r\n        <View style = {styles.infoContainerBottom}>\r\n            <Text style ={styles.boldText}>Joined</Text>\r\n            <Text style = {styles.fixedRightText}>{joined}</Text>\r\n        </View>\r\n        \r\n        <TouchableOpacity style = {styles.changePWHeader} onPress = {()=>{setShowChange(!showChange)}}>\r\n            <Text style = {{color: \"#fff\", fontWeight: \"bold\"}}> Change Password</Text>\r\n        </TouchableOpacity>\r\n        {showChange ? (\r\n                <View style = {styles.changePWBody}>\r\n                    <TextInput\r\n                        type = 'outlined'\r\n                        label=\"Current Password\"\r\n                        value={currentPassword}\r\n                        theme={theme}\r\n                        secureTextEntry={true}\r\n                        style = {styles.outlinedTextBox}\r\n                        onChangeText={text => setCurrentPassword(text)}\r\n                    />\r\n                    <TextInput\r\n                        type = 'outlined'\r\n                        label=\"New Password\"\r\n                        value={newPassword}\r\n                        theme={theme}\r\n                        secureTextEntry={true}\r\n                        style = {styles.outlinedTextBox}\r\n                        onChangeText={text => setNewPassword(text)}\r\n                    />\r\n                    <TextInput\r\n                        type = 'outlined'\r\n                        label=\"Repeat New Password\"\r\n                        value={newPassword1}\r\n                        theme={theme}\r\n                        secureTextEntry={true}\r\n                        style = {styles.outlinedTextBox}\r\n                        onChangeText={text => setNewPassword1(text)}\r\n                    />\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => { showLoading ? null : changePasswordHandler()}}\r\n                  >\r\n                    <Text\r\n                      style={styles.buttonText}\r\n                    >\r\n                      Confirm\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n        ) : null}\r\n\r\n        </ScrollView>\r\n        {showLoading ? (\r\n            <View style = {styles.loadingContainer}>\r\n            <ColorDotsLoader size = {30} color1 = {\"#4FC69A\"} color2 = {\"#1EA78C\"} color3 = {\"#0E956A\"} /> \r\n            <Text style = {{fontWeight: \"bold\", color : \"#434343\"}}>Loading</Text>       \r\n            </View>\r\n          ) : null}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"center\",\r\n   marginTop: Platform.OS === \"android\" ? 25 : 0,\r\n  },\r\n\r\n  contentContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    padding: 15\r\n  },\r\n\r\n  rbuttonContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n\r\n  logoContainer: {\r\n    flex: 1.5,\r\n    width: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#434343\",\r\n    paddingBottom: 0,\r\n  },\r\n\r\n  inputContainer: {\r\n    flex: 0.5,\r\n    width: \"100%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#434343\",\r\n    paddingTop: 40,\r\n    paddingHorizontal: 5,\r\n  },\r\n  button: {\r\n    width: \"50%\",\r\n    height: 45,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 30,\r\n    backgroundColor: \"#1EA78C\",\r\n    alignSelf: \"center\",\r\n    marginVertical: 15\r\n  },\r\n\r\n  changePWHeader: {\r\n    width: \"100%\", \r\n    backgroundColor: \"#1EA78C\", \r\n    marginHorizontal: 5, \r\n    marginTop:15, \r\n    paddingVertical: 20, \r\n    paddingHorizontal: 10, \r\n    alignItems: \"center\"\r\n  },\r\n\r\n  loadingContainer: {\r\n    flex:1, \r\n    height: \"100%\", \r\n    width: \"100%\",\r\n    flexDirection: \"column\", \r\n    alignItems: \"center\", \r\n    justifyContent: \"center\", \r\n    position: \"absolute\",\r\n    paddingTop: Platform.OS === \"android\" ? 25 : 0,\r\n   },\r\n\r\n  infoContainer: {\r\n    flexDirection: \"row\", \r\n    alignItems: \"center\", \r\n    borderBottomWidth: 1, \r\n    paddingVertical: 25, \r\n    marginHorizontal: 5, \r\n    borderBottomColor: \"#bcbcbc\"\r\n  },\r\n\r\n  infoContainerBottom: {\r\n    flexDirection: \"row\", \r\n    alignItems: \"center\",  \r\n    paddingVertical: 25, \r\n    marginHorizontal: 5, \r\n  },\r\n\r\n  boldText: {\r\n    position: \"absolute\", \r\n    left: 15, \r\n    fontWeight: \"bold\"\r\n  },\r\n\r\n  fixedRightText: {\r\n    position: \"absolute\", \r\n    right: 15\r\n  },\r\n\r\n  changePWBody: {\r\n    paddingHorizontal: 10, \r\n    width: \"100%\", \r\n    backgroundColor: \"#f0edf6\", \r\n    marginHorizontal: 5\r\n  },\r\n\r\n  outlinedTextBox: {\r\n    fontSize: 13, \r\n    marginVertical:2, \r\n    width: \"97%\", \r\n    alignSelf: \"center\"\r\n  },\r\n\r\n  buttonText: {\r\n    textAlign: \"center\", \r\n    color: \"#fff\", \r\n    fontWeight: \"bold\" \r\n  }\r\n\r\n});\r\n\r\nexport default AccountInfo;\r\n"]},"metadata":{},"sourceType":"module"}