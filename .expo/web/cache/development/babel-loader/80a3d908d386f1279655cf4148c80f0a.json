{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\src\\\\components\\\\ReportCard.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport moment from 'moment';\n\nvar ReportCard = function ReportCard(props) {\n  var createdAt = props.createdAt,\n      latitude = props.latitude,\n      longitude = props.longitude,\n      id = props.id,\n      rain = props.rain,\n      flood = props.flood,\n      image = props.image;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      img = _useState2[0],\n      setImg = _useState2[1];\n\n  var convertedTime = moment(createdAt).format(\"DD MMM YYYY (dddd) HH:mm\");\n  useEffect(function () {\n    if (image) {\n      setImg(React.createElement(MaterialCommunityIcons, {\n        name: \"camera\",\n        color: \"#3d3d3d\",\n        size: 25,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      setImg(null);\n    }\n  }, []);\n  return React.createElement(View, {\n    style: styles.cardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.cardContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      width: \"100%\",\n      borderBottomWidth: 1,\n      paddingBottom: 5,\n      borderBottomColor: \"#BCBCBC\",\n      marginBottom: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.dateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, convertedTime), React.createElement(View, {\n    style: {\n      right: 0,\n      position: \"absolute\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, img)), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Location: [\", latitude, \", \", longitude, \"]\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Rain Intensity: \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, rain)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Flood Level: \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, flood))));\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    display: 'flex',\n    backgroundColor: '#fff',\n    height: 135,\n    width: \"100%\",\n    borderWidth: 0.5,\n    borderColor: \"#bcbcbc\",\n    marginBottom: 15\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: \"flex-start\",\n    padding: 10\n  },\n  dateText: {\n    color: \"#3d3d3d\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 15\n  },\n  latLongText: {\n    backgroundColor: \"#1EA78C\",\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 30,\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  rainText: {\n    borderRadius: 30,\n    paddingVertical: 1,\n    paddingHorizontal: 8,\n    backgroundColor: \"#1EA78C\",\n    color: \"#fff\"\n  },\n  floodText: {\n    borderRadius: 30,\n    paddingVertical: 1,\n    paddingHorizontal: 8,\n    backgroundColor: \"#0E956A\",\n    color: \"#fff\"\n  }\n});\nexport default ReportCard;","map":{"version":3,"sources":["D:/Github/rainflow_mobile/src/components/ReportCard.js"],"names":["React","useState","useEffect","MaterialCommunityIcons","moment","ReportCard","props","createdAt","latitude","longitude","id","rain","flood","image","img","setImg","convertedTime","format","styles","cardContainer","cardContent","flexDirection","alignItems","width","borderBottomWidth","paddingBottom","borderBottomColor","marginBottom","dateText","right","position","marginTop","StyleSheet","create","display","backgroundColor","height","borderWidth","borderColor","justifyContent","padding","color","textAlign","fontWeight","fontSize","latLongText","paddingVertical","paddingHorizontal","borderRadius","rainText","floodText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {StyleSheet, \r\n        View, \r\n        Text, \r\n        TouchableOpacity } from 'react-native'\r\n\r\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\";\r\nimport moment from 'moment'\r\n\r\n\r\nconst ReportCard = props => {\r\n    const {createdAt, latitude, longitude, id, rain, flood, image} = props;\r\n    const [img, setImg] = useState();\r\n    const convertedTime = moment(createdAt).format(\"DD MMM YYYY (dddd) HH:mm\")\r\n\r\n    useEffect(()=>{\r\n        if(image){\r\n            setImg(\r\n                <MaterialCommunityIcons\r\n                name=\"camera\"\r\n                color=\"#3d3d3d\"\r\n                size={25}\r\n              />\r\n            )\r\n        }else{\r\n            setImg(null)\r\n        }\r\n    },[])\r\n\r\n\r\n  return(\r\n    <View style={styles.cardContainer}>\r\n      <View style = {styles.cardContent}>\r\n          <View style = {{flexDirection: \"row\", alignItems: \"center\", width: \"100%\", borderBottomWidth: 1, paddingBottom: 5, borderBottomColor: \"#BCBCBC\", marginBottom: 5}}>\r\n          <Text style = {styles.dateText}>{convertedTime}</Text>\r\n          <View style = {{right: 0, position: \"absolute\"}}>\r\n            {img}\r\n          </View>\r\n          </View>\r\n          <Text>Location: [{latitude}, {longitude}]</Text>\r\n          <View style = {{flexDirection: \"row\", marginTop: 5}}>\r\n          <Text>Rain Intensity: </Text>\r\n          <Text>{rain}</Text>\r\n          </View>\r\n          <View style = {{flexDirection: \"row\", marginTop: 5}}>\r\n          <Text>Flood Level: </Text>\r\n          <Text>{flood}</Text>\r\n          </View>\r\n          \r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    display: 'flex',\r\n    backgroundColor: '#fff',\r\n    height: 135,\r\n    width: \"100%\",\r\n    borderWidth: 0.5,\r\n    borderColor: \"#bcbcbc\",\r\n    marginBottom: 15\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: \"flex-start\",\r\n    padding: 10,\r\n  },\r\n\r\n  dateText: {\r\n      //backgroundColor: \"#1EA78C\",\r\n      //paddingVertical: 5,\r\n      //paddingHorizontal: 10,\r\n      //borderRadius: 30,\r\n      color: \"#3d3d3d\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      fontSize: 15\r\n  },\r\n\r\n  latLongText: {\r\n      backgroundColor: \"#1EA78C\",\r\n      paddingVertical: 5,\r\n      paddingHorizontal: 10,\r\n      borderRadius: 30,\r\n      color: \"#fff\",\r\n      textAlign: \"center\"\r\n  },\r\n\r\n  rainText: {\r\n      borderRadius: 30, \r\n      paddingVertical: 1, \r\n      paddingHorizontal: 8, \r\n      backgroundColor: \"#1EA78C\", \r\n      color: \"#fff\"},\r\n\r\n    floodText: {\r\n        borderRadius: 30, \r\n        paddingVertical: 1, \r\n        paddingHorizontal: 8, \r\n        backgroundColor: \"#0E956A\", \r\n        color: \"#fff\"}\r\n})\r\n\r\nexport default ReportCard"]},"metadata":{},"sourceType":"module"}