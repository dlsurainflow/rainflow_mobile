{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Github\\\\rainflow_mobile\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\DoubleCircleLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from \"../animated/AnimatedCircle\";\nimport { color } from \"../const\";\n\nvar DoubleCircleLoader = function (_React$PureComponent) {\n  _inherits(DoubleCircleLoader, _React$PureComponent);\n\n  var _super = _createSuper(DoubleCircleLoader);\n\n  function DoubleCircleLoader() {\n    var _this;\n\n    _classCallCheck(this, DoubleCircleLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scales: [new Animated.Value(0), new Animated.Value(0)]\n    };\n    _this.timers = [];\n\n    _this._animation = function (i) {\n      Animated.sequence([Animated.timing(_this.state.scales[i], {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: false\n      }), Animated.timing(_this.state.scales[i], {\n        toValue: 0,\n        duration: 1000,\n        useNativeDriver: false\n      })]).start(function () {\n        !_this.unmounted && _this._animation(i);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DoubleCircleLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.scales.forEach(function (item, i) {\n        var id = setTimeout(function () {\n          _this2._animation(i);\n        }, i * 1000);\n\n        _this2.timers.push(id);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n      this.timers.forEach(function (id) {\n        clearTimeout(id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size;\n      var scales = this.state.scales;\n      return React.createElement(Surface, {\n        width: size,\n        height: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, React.createElement(AnimatedCircle, {\n        radius: size,\n        fill: color,\n        opacity: 0.5,\n        scale: scales[0],\n        x: size / 2,\n        y: size / 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), React.createElement(AnimatedCircle, {\n        radius: size,\n        fill: color,\n        opacity: 0.5,\n        scale: scales[1],\n        x: size / 2,\n        y: size / 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DoubleCircleLoader;\n}(React.PureComponent);\n\nDoubleCircleLoader.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.number\n};\nDoubleCircleLoader.defaultProps = {\n  color: color,\n  size: 30\n};\nexport { DoubleCircleLoader as default };","map":{"version":3,"sources":["D:/Github/rainflow_mobile/node_modules/react-native-indicator/lib/loader/DoubleCircleLoader.js"],"names":["React","PropTypes","Surface","AnimatedCircle","color","DoubleCircleLoader","state","scales","Animated","Value","timers","_animation","i","sequence","timing","toValue","duration","useNativeDriver","start","unmounted","forEach","item","id","setTimeout","push","clearTimeout","props","size","PureComponent","propTypes","string","number","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,cAAP;AACA,SAASC,KAAT;;IAEqBC,kB;;;;;;;;;;;;;;;UAWnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,CAAC,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,EAAwB,IAAID,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAxB;AADF,K;UAGRC,M,GAAS,E;;UAkBTC,U,GAAa,UAACC,CAAD,EAAO;AAClBJ,MAAAA,QAAQ,CAACK,QAAT,CAAkB,CAChBL,QAAQ,CAACM,MAAT,CAAgB,MAAKR,KAAL,CAAWC,MAAX,CAAkBK,CAAlB,CAAhB,EAAsC;AAAEG,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,QAAQ,EAAE,IAAxB;AAA8BC,QAAAA,eAAe,EAAE;AAA/C,OAAtC,CADgB,EAEhBT,QAAQ,CAACM,MAAT,CAAgB,MAAKR,KAAL,CAAWC,MAAX,CAAkBK,CAAlB,CAAhB,EAAsC;AAAEG,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,QAAQ,EAAE,IAAxB;AAA8BC,QAAAA,eAAe,EAAE;AAA/C,OAAtC,CAFgB,CAAlB,EAGGC,KAHH,CAGS,YAAM;AACb,SAAC,MAAKC,SAAN,IAAmB,MAAKR,UAAL,CAAgBC,CAAhB,CAAnB;AACD,OALD;AAMD,K;;;;;;;wCAvBmB;AAAA;;AAClB,WAAKN,KAAL,CAAWC,MAAX,CAAkBa,OAAlB,CAA0B,UAACC,IAAD,EAAOT,CAAP,EAAa;AACrC,YAAMU,EAAE,GAAGC,UAAU,CAAC,YAAM;AAC1B,UAAA,MAAI,CAACZ,UAAL,CAAgBC,CAAhB;AACD,SAFoB,EAElBA,CAAC,GAAG,IAFc,CAArB;;AAGA,QAAA,MAAI,CAACF,MAAL,CAAYc,IAAZ,CAAiBF,EAAjB;AACD,OALD;AAMD;;;2CAEsB;AACrB,WAAKH,SAAL,GAAiB,IAAjB;AACA,WAAKT,MAAL,CAAYU,OAAZ,CAAoB,UAACE,EAAD,EAAQ;AAC1BG,QAAAA,YAAY,CAACH,EAAD,CAAZ;AACD,OAFD;AAGD;;;6BAWQ;AAAA,wBACiB,KAAKI,KADtB;AAAA,UACCtB,KADD,eACCA,KADD;AAAA,UACQuB,IADR,eACQA,IADR;AAAA,UAECpB,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAGP,aACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEoB,IAAhB;AAAsB,QAAA,MAAM,EAAEA,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,MAAM,EAAEA,IADV;AAEE,QAAA,IAAI,EAAEvB,KAFR;AAGE,QAAA,OAAO,EAAE,GAHX;AAIE,QAAA,KAAK,EAAEG,MAAM,CAAC,CAAD,CAJf;AAKE,QAAA,CAAC,EAAEoB,IAAI,GAAG,CALZ;AAME,QAAA,CAAC,EAAEA,IAAI,GAAG,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,cAAD;AACE,QAAA,MAAM,EAAEA,IADV;AAEE,QAAA,IAAI,EAAEvB,KAFR;AAGE,QAAA,OAAO,EAAE,GAHX;AAIE,QAAA,KAAK,EAAEG,MAAM,CAAC,CAAD,CAJf;AAKE,QAAA,CAAC,EAAEoB,IAAI,GAAG,CALZ;AAME,QAAA,CAAC,EAAEA,IAAI,GAAG,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAoBD;;;;EAhE6C3B,KAAK,CAAC4B,a;;AAAjCvB,kB,CACZwB,S,GAAY;AACjBzB,EAAAA,KAAK,EAAEH,SAAS,CAAC6B,MADA;AAEjBH,EAAAA,IAAI,EAAE1B,SAAS,CAAC8B;AAFC,C;AADA1B,kB,CAMZ2B,Y,GAAe;AACpB5B,EAAAA,KAAK,EAALA,KADoB;AAEpBuB,EAAAA,IAAI,EAAE;AAFc,C;SANHtB,kB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class DoubleCircleLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 30,\n  };\n\n  state = {\n    scales: [new Animated.Value(0), new Animated.Value(0)],\n  };\n  timers = [];\n\n  componentDidMount() {\n    this.state.scales.forEach((item, i) => {\n      const id = setTimeout(() => {\n        this._animation(i);\n      }, i * 1000);\n      this.timers.push(id);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.timers.forEach((id) => {\n      clearTimeout(id);\n    });\n  }\n\n  _animation = (i) => {\n    Animated.sequence([\n      Animated.timing(this.state.scales[i], { toValue: 1, duration: 1000, useNativeDriver: false }),\n      Animated.timing(this.state.scales[i], { toValue: 0, duration: 1000, useNativeDriver: false }),\n    ]).start(() => {\n      !this.unmounted && this._animation(i);\n    });\n  };\n\n  render() {\n    const { color, size } = this.props;\n    const { scales } = this.state;\n    return (\n      <Surface width={size} height={size}>\n        <AnimatedCircle\n          radius={size}\n          fill={color}\n          opacity={0.5}\n          scale={scales[0]}\n          x={size / 2}\n          y={size / 2}\n        />\n        <AnimatedCircle\n          radius={size}\n          fill={color}\n          opacity={0.5}\n          scale={scales[1]}\n          x={size / 2}\n          y={size / 2}\n        />\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}